vector<int> verticalOrder(Node *root)
{
    queue<pair<Node*, int> > q;
    q.push({root, 0});
    map<int, vector<Node*> > m;
    m[0].push_back(root);
    while(!q.empty()){
        pair<Node*, int> p = q.front();
        q.pop();
        Node* node = p.first;
        int dist = p.second;
        if(node->left){
            q.push({node->left, dist-1});
            m[dist-1].push_back(node->left);
        }
        if(node->right){
            q.push({node->right, dist+1});
            m[dist+1].push_back(node->right);
        }
    }
    vector<int> v;
    for(pair<int,vector<Node*> > p : m){
        for(Node* n : p.second)
            v.push_back(n->data);
    }
    return v;
}
