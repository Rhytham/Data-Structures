//O(n*n)
#include <iostream>
using namespace std;
#include<bits/stdc++.h>

int main() {
	int test;
	cin>>test;
	for(int t=0; t<test; t++){
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0; i<n; i++){
	        cin>>arr[i];
	    }
	    sort(arr, arr+n);
	    int count=0;
	    for(int i=n-1; i>1; i--){
	        int target = arr[i];
	        int low=0, high=i-1;
	        while(low<high){
	            int req = arr[low]+arr[high];
	            if(req==target){
	                count++;
	                low++;
	                high--;
	            } else if(req<target)
	                low++;
	              else
	                high--;
	        }
	    }
	    if(count>0)
	        cout<<count<<endl;
	    else
	        cout<<-1<<endl;
	}
	return 0;
}


//O(n*n*logn)
#include <iostream>
using namespace std;
#include<bits/stdc++.h>

bool binary_search(int arr[], int start, int end, int target){
    while(start<=end){
        int mid = (start+end)/2;
        if(arr[mid]==target)
            return 1;
        if(arr[mid] < target)
            start = mid+1;
        else
            end = mid-1;
    }
    return 0;
}

int main() {
	int test;
	cin>>test;
	for(int t=0; t<test; t++){
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0; i<n; i++){
	        cin>>arr[i];
	    }
	    sort(arr, arr+n);
	    int count=0;
	    for(int i=n-1; i>1; i--){
	        int target = arr[i];
	        for(int j=i-1; j>0; j--){
	            int sum_left = target-arr[j];
	            if(binary_search(arr, 0, j-1, sum_left))
	                count++;
	        }
	    }
	    if(count>0)
	        cout<<count<<endl;
	    else
	        cout<<-1<<endl;
	}
	return 0;
}
