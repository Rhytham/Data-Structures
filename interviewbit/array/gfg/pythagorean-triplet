#include <iostream>
using namespace std;

void merge(int A[], int l, int mid, int r){
    int n1 = (mid-l+1), a1[n1];
    int n2 = (r-mid) , a2[n2];
    for(int i=0; i<n1; i++)
        a1[i] = A[l+i];
    for(int i=0; i<n2; i++)
        a2[i] = A[mid+1+i];
    int i=0, j=0, k=l;
    while(i<n1 && j<n2){
        if(a1[i] < a2[j])
            A[k++] = a1[i++];
        else
            A[k++] = a2[j++];
    }
    while(i<n1)
        A[k++] = a1[i++];
    while(j<n2)
        A[k++] = a2[j++];
}
void mergesort(int A[], int l, int r){
    if(l >= r)
        return;
    int mid = (l+r)/2;
    mergesort(A, l, mid);
    mergesort(A, mid+1, r);
    merge(A, l, mid, r);
}

int main() {
	int test;
	cin>>test;
	for(int t=0; t<test; t++){
	    int n;
	    cin>>n;
	    int A[n];
	    for(int i=0; i<n; i++)
	        cin>>A[i];
	   mergesort(A, 0, n-1);
	   bool b=false;
	   for(int k=n-1; k>1; k--){
	       int i=0, j=k-1;
	       int hp=A[k];
	       while(i<j){
	           int bs=A[i], pp=A[j];
	           if((bs*bs+pp*pp) == hp*hp){
	               cout<<"Yes"<<endl;
	               b=true;
	               break;
	           } else if((bs*bs+pp*pp) < hp*hp)
	                i++;
	           else
	                j--;
	       }
	       if(b)
	           break;
	   }
	   if(!b)
	        cout<<"No"<<endl;
	}
	return 0;
}
