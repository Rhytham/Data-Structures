#include <iostream>
using namespace std;
#include<vector>

int lcs(string A, string B, int i, int j, vector<vector<int> > &dp){
    if(i==A.length() || j==B.length())
        return 0;
    if(dp[i][j] != -1)
        return dp[i][j];
    if(A[i]==B[j])
        dp[i][j] = (1 + lcs(A, B, i+1, j+1, dp));
    else
        dp[i][j] = max( lcs(A,B,i,j+1,dp), max(lcs(A,B,i+1,j,dp), lcs(A,B,i+1,j+1,dp)) );
    return dp[i][j];
}

int main() {
	int t;
	cin>>t;
	for(int i=0; i<t; i++){
	    int n1, n2;
	    cin>>n1>>n2;
    	string A, B;
    	cin>>A>>B;
    	vector<vector<int> > dp(n1, vector<int>(n2, -1));
    	cout<<lcs(A, B, 0, 0, dp)<<endl;
	}
	return 0;
}
