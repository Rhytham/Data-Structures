int Solution::maxProfit(const vector<int> &A) {
    if(A.size()==0)
        return 0;
    int n=A.size(), mx=A[n-1], p[n];
    p[n-1]=0;
    for(int i=n-2; i>=0; i--){
        mx = max(mx, A[i]);
        p[i] = max(mx-A[i], p[i+1]);
    }
    int mn = A[0];
    for(int i=1; i<n; i++){
        mn = min(mn, A[i]);
        p[i] = max(A[i]-mn+p[i], p[i-1]);
    }
    
    return p[n-1];
}
