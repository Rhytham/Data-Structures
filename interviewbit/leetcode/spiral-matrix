class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        if(matrix.size() == 0)
            return ans;
        int rs = 0, re = matrix.size()-1;
        int cs = 0, ce = matrix[0].size()-1; 
        int i=0, j=0, dir=0, k=1;
        while(k++ <= matrix.size()*matrix[0].size()){
                ans.push_back(matrix[i][j]);
                if(dir == 0){
                    j++;
                    if(j > ce){
                        j--;
                        i++;
                        rs++;
                        dir = 1;
                    }
                }else if(dir == 1){
                    i++;
                    if(i > re){
                        i--;
                        j--;
                        ce--;
                        dir = 2;
                    }
                } else if(dir == 2){
                    j--;
                    if(j < cs){
                        j++;
                        i--;
                        re--;
                        dir = 3;
                    }
                } else{
                    i--;
                    if(i < rs){
                        i++;
                        j++;
                        cs++;
                        dir = 0;
                    }
                }
        }
        return ans;
    }
};
