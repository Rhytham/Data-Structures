#include <iostream>
using namespace std;
#include<bits/stdc++.h>

string find_palin(string str, int ind){
    
    int dp[str.length()][str.length()]={0};
    
    for(int i=0; i<str.length(); i++){
        dp[i][i]=1;
    }
    for(int k=1; k<str.length(); k++){
        for(int i=0; i<str.length()-k; i+=(k+1)){
            if(str[i]==str[i+k]){
                dp[i][i+k] = 2 + dp[i+1][i+k-1];
            } else{
                dp[i][i+k] = max(dp[i][i+k-1], dp[i+1][i+k]);
            }
        }
    }
    int len = dp[0][str.length()-1];
    int ii=0, jj=len-1;
    string ans(len, '\0');
    for(int i=0, j=str.length()-1; ii<=jj; ){
        if(str[i] == str[j]){
            ans[ii++] = str[i];
            ans[jj--] = str[j];
            i = i+1;
            j = j-1;
        } else{
            if(dp[i+1][j] > dp[i][j-1]){
                i = i+1;
            } else{
                j = j-1;
            }
        }
    }
    return ans;
}

int main() {
	int test;
	cin>>test;
	for(int t=0; t<test; t++){
	    string str;
	    cin>>str;
	    string ans="", mx="";
	    cout<<find_palin(str, 0)<<endl;
	}
	return 0;
}
