vector<int> Solution::findSubstring(string A, const vector<string> &B) {
    vector<int> ans;
    if(B.size()==0){
        return ans;
    }
    unordered_map<string, int> m;
    int n1=B.size(), n2=B[0].length();
    for(int i=0; A.length()>=(i+(n1*n2)); i++){
        
        for(int j=0; j<n1; j++){
            if(m.find(B[j])==m.end())
                m[B[j]]=1;
            else
                m[B[j]]++;
        }
        
        string s = A.substr(i, (n1*n2));
        for(int j=0; j<=(s.length()-n2); ){
            string word = s.substr(j, n2);
            if(m.find(word)!=m.end()){
                j += n2;
                if(m[word]==1)
                    m.erase(word);
                else
                    m[word]--;
            } else{
                j++;
            }
        }
        if(m.size()==0){
            ans.push_back(i);
        }
        m.clear();
    }
    
    return ans;
}
