/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
void Solution::connect(TreeLinkNode* A) {
        if(!A){
            return;
        }
        queue<TreeLinkNode*> q;
        q.push(A);
        int i=1;
        
        while(!q.empty()){
            int k=1;
            while(k++<i){
                TreeLinkNode* c=q.front();
                q.pop();
                c->next=q.front();
                if(c->left)
                    q.push(c->left);
                if(c->right)
                    q.push(c->right);
            }
            if(!q.empty()){
            TreeLinkNode* c=q.front();
            q.pop();
            c->next=NULL;
            if(c->left)
                q.push(c->left);
            if(c->right)
                q.push(c->right);
            }
            i=q.size();
        }
        
}
